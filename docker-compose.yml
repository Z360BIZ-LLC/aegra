services:
  # PostgreSQL database for LangGraph and metadata
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: aegra
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d aegra"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Aegra Server
  aegra:
    build:
      context: ../../..  # agent-layer root (to access packages/common)
      dockerfile: agents/text/aegra/deployments/docker/Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Linux support for host access
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    env_file:
      - ../../../.env  # Load env from agent-layer root
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@postgres:5432/aegra
      - AUTH_TYPE=noop
      - DEBUG=true
      - PORT=${PORT:-8000}
      - UV_CACHE_DIR=/tmp/uv-cache
      - API_BASE_URL=http://localhost:8000 # Points to mock API on host
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./aegra.json:/app/aegra.json:ro
      - ./auth.py:/app/auth.py:ro
      - ./alembic:/app/alembic:ro  # For migrations
      # Mount aegra server source for hot reload
      - ./src/agent_server:/app/src/agent_server:ro
      # Mount your custom graphs for hot reload (separate subdirectories)
      - ../src/text_agent:/app/src/text_agent:ro
      - ../src/askz_agent:/app/src/askz_agent:ro
    command: >
      sh -c "
        echo 'Running database migrations...' &&
        uv run alembic upgrade head &&
        echo 'Starting Aegra server...' &&
        uv run uvicorn src.agent_server.main:app --host 0.0.0.0 --port $${PORT:-8000} --reload
      "

  # Redis (optional - for advanced queuing in future phases)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    profiles:
      - redis

volumes:
  postgres_data:
  redis_data:
